#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB_SERVER.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Merchant")]
	public partial class Merchant_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGetUrlPayment(GetUrlPayment instance);
    partial void UpdateGetUrlPayment(GetUrlPayment instance);
    partial void DeleteGetUrlPayment(GetUrlPayment instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertOderRequest(OderRequest instance);
    partial void UpdateOderRequest(OderRequest instance);
    partial void DeleteOderRequest(OderRequest instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    #endregion
		
		public Merchant_DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MerchantConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Merchant_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Merchant_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Merchant_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Merchant_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GetUrlPayment> GetUrlPayments
		{
			get
			{
				return this.GetTable<GetUrlPayment>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<OderRequest> OderRequests
		{
			get
			{
				return this.GetTable<OderRequest>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GetUrlPayment")]
	public partial class GetUrlPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _urlId;
		
		private string _transId;
		
		private string _payUrl;
		
		private EntityRef<OderRequest> _OderRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnurlIdChanging(int value);
    partial void OnurlIdChanged();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnpayUrlChanging(string value);
    partial void OnpayUrlChanged();
    #endregion
		
		public GetUrlPayment()
		{
			this._OderRequest = default(EntityRef<OderRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int urlId
		{
			get
			{
				return this._urlId;
			}
			set
			{
				if ((this._urlId != value))
				{
					this.OnurlIdChanging(value);
					this.SendPropertyChanging();
					this._urlId = value;
					this.SendPropertyChanged("urlId");
					this.OnurlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30)")]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					if (this._OderRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payUrl", DbType="NVarChar(MAX)")]
		public string payUrl
		{
			get
			{
				return this._payUrl;
			}
			set
			{
				if ((this._payUrl != value))
				{
					this.OnpayUrlChanging(value);
					this.SendPropertyChanging();
					this._payUrl = value;
					this.SendPropertyChanged("payUrl");
					this.OnpayUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_GetUrlPayment", Storage="_OderRequest", ThisKey="transId", OtherKey="transId", IsForeignKey=true)]
		public OderRequest OderRequest
		{
			get
			{
				return this._OderRequest.Entity;
			}
			set
			{
				OderRequest previousValue = this._OderRequest.Entity;
				if (((previousValue != value) 
							|| (this._OderRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OderRequest.Entity = null;
						previousValue.GetUrlPayments.Remove(this);
					}
					this._OderRequest.Entity = value;
					if ((value != null))
					{
						value.GetUrlPayments.Add(this);
						this._transId = value.transId;
					}
					else
					{
						this._transId = default(string);
					}
					this.SendPropertyChanged("OderRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _productId;
		
		private string _Name;
		
		private string _Amount;
		
		private System.Nullable<int> _Count;
		
		private string _image;
		
		private EntitySet<OderRequest> _OderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(string value);
    partial void OnproductIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public Product()
		{
			this._OderRequests = new EntitySet<OderRequest>(new Action<OderRequest>(this.attach_OderRequests), new Action<OderRequest>(this.detach_OderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NChar(30)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(100)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OderRequest", Storage="_OderRequests", ThisKey="productId", OtherKey="productId")]
		public EntitySet<OderRequest> OderRequests
		{
			get
			{
				return this._OderRequests;
			}
			set
			{
				this._OderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OderRequests(OderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OderRequests(OderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OderRequest")]
	public partial class OderRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transId;
		
		private string _amount;
		
		private string _shopId;
		
		private string _oderInfo;
		
		private string _responseTime;
		
		private string _signature;
		
		private string _productId;
		
		private EntitySet<GetUrlPayment> _GetUrlPayments;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnshopIdChanging(string value);
    partial void OnshopIdChanged();
    partial void OnoderInfoChanging(string value);
    partial void OnoderInfoChanged();
    partial void OnresponseTimeChanging(string value);
    partial void OnresponseTimeChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    partial void OnproductIdChanging(string value);
    partial void OnproductIdChanged();
    #endregion
		
		public OderRequest()
		{
			this._GetUrlPayments = new EntitySet<GetUrlPayment>(new Action<GetUrlPayment>(this.attach_GetUrlPayments), new Action<GetUrlPayment>(this.detach_GetUrlPayments));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NChar(30)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="NChar(10)")]
		public string shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oderInfo", DbType="NVarChar(50)")]
		public string oderInfo
		{
			get
			{
				return this._oderInfo;
			}
			set
			{
				if ((this._oderInfo != value))
				{
					this.OnoderInfoChanging(value);
					this.SendPropertyChanging();
					this._oderInfo = value;
					this.SendPropertyChanged("oderInfo");
					this.OnoderInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseTime", DbType="NChar(30)")]
		public string responseTime
		{
			get
			{
				return this._responseTime;
			}
			set
			{
				if ((this._responseTime != value))
				{
					this.OnresponseTimeChanging(value);
					this.SendPropertyChanging();
					this._responseTime = value;
					this.SendPropertyChanged("responseTime");
					this.OnresponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(MAX)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="NChar(10)")]
		public string productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_GetUrlPayment", Storage="_GetUrlPayments", ThisKey="transId", OtherKey="transId")]
		public EntitySet<GetUrlPayment> GetUrlPayments
		{
			get
			{
				return this._GetUrlPayments;
			}
			set
			{
				this._GetUrlPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_Payment", Storage="_Payments", ThisKey="transId", OtherKey="transId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OderRequest", Storage="_Product", ThisKey="productId", OtherKey="productId", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OderRequests.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OderRequests.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GetUrlPayments(GetUrlPayment entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = this;
		}
		
		private void detach_GetUrlPayments(GetUrlPayment entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _paymentId;
		
		private string _transId;
		
		private string _statusCode;
		
		private string _responseTime;
		
		private string _signature;
		
		private EntityRef<OderRequest> _OderRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpaymentIdChanging(int value);
    partial void OnpaymentIdChanged();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnstatusCodeChanging(string value);
    partial void OnstatusCodeChanged();
    partial void OnresponseTimeChanging(string value);
    partial void OnresponseTimeChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    #endregion
		
		public Payment()
		{
			this._OderRequest = default(EntityRef<OderRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int paymentId
		{
			get
			{
				return this._paymentId;
			}
			set
			{
				if ((this._paymentId != value))
				{
					this.OnpaymentIdChanging(value);
					this.SendPropertyChanging();
					this._paymentId = value;
					this.SendPropertyChanged("paymentId");
					this.OnpaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30)")]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					if (this._OderRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusCode", DbType="NChar(10)")]
		public string statusCode
		{
			get
			{
				return this._statusCode;
			}
			set
			{
				if ((this._statusCode != value))
				{
					this.OnstatusCodeChanging(value);
					this.SendPropertyChanging();
					this._statusCode = value;
					this.SendPropertyChanged("statusCode");
					this.OnstatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseTime", DbType="NChar(30)")]
		public string responseTime
		{
			get
			{
				return this._responseTime;
			}
			set
			{
				if ((this._responseTime != value))
				{
					this.OnresponseTimeChanging(value);
					this.SendPropertyChanging();
					this._responseTime = value;
					this.SendPropertyChanged("responseTime");
					this.OnresponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(MAX)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_Payment", Storage="_OderRequest", ThisKey="transId", OtherKey="transId", IsForeignKey=true)]
		public OderRequest OderRequest
		{
			get
			{
				return this._OderRequest.Entity;
			}
			set
			{
				OderRequest previousValue = this._OderRequest.Entity;
				if (((previousValue != value) 
							|| (this._OderRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OderRequest.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._OderRequest.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._transId = value.transId;
					}
					else
					{
						this._transId = default(string);
					}
					this.SendPropertyChanged("OderRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
