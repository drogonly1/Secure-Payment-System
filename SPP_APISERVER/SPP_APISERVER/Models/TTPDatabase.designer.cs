#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPP_APISERVER.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TTP_SSP")]
	public partial class TTPDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuyer(Buyer instance);
    partial void UpdateBuyer(Buyer instance);
    partial void DeleteBuyer(Buyer instance);
    partial void InsertPaymentRequest(PaymentRequest instance);
    partial void UpdatePaymentRequest(PaymentRequest instance);
    partial void DeletePaymentRequest(PaymentRequest instance);
    partial void InsertConfirmOderRequest(ConfirmOderRequest instance);
    partial void UpdateConfirmOderRequest(ConfirmOderRequest instance);
    partial void DeleteConfirmOderRequest(ConfirmOderRequest instance);
    partial void InsertMerchant(Merchant instance);
    partial void UpdateMerchant(Merchant instance);
    partial void DeleteMerchant(Merchant instance);
    partial void InsertOderRequest(OderRequest instance);
    partial void UpdateOderRequest(OderRequest instance);
    partial void DeleteOderRequest(OderRequest instance);
    partial void InsertOrderPaymentReceipt(OrderPaymentReceipt instance);
    partial void UpdateOrderPaymentReceipt(OrderPaymentReceipt instance);
    partial void DeleteOrderPaymentReceipt(OrderPaymentReceipt instance);
    #endregion
		
		public TTPDatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TTP_SSPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TTPDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TTPDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TTPDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TTPDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Buyer> Buyers
		{
			get
			{
				return this.GetTable<Buyer>();
			}
		}
		
		public System.Data.Linq.Table<PaymentRequest> PaymentRequests
		{
			get
			{
				return this.GetTable<PaymentRequest>();
			}
		}
		
		public System.Data.Linq.Table<ConfirmOderRequest> ConfirmOderRequests
		{
			get
			{
				return this.GetTable<ConfirmOderRequest>();
			}
		}
		
		public System.Data.Linq.Table<Merchant> Merchants
		{
			get
			{
				return this.GetTable<Merchant>();
			}
		}
		
		public System.Data.Linq.Table<OderRequest> OderRequests
		{
			get
			{
				return this.GetTable<OderRequest>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentReceipt> OrderPaymentReceipts
		{
			get
			{
				return this.GetTable<OrderPaymentReceipt>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buyer")]
	public partial class Buyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _buyerId;
		
		private string _Username;
		
		private string _Password;
		
		private string _amount;
		
		private EntitySet<PaymentRequest> _PaymentRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbuyerIdChanging(string value);
    partial void OnbuyerIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    #endregion
		
		public Buyer()
		{
			this._PaymentRequests = new EntitySet<PaymentRequest>(new Action<PaymentRequest>(this.attach_PaymentRequests), new Action<PaymentRequest>(this.detach_PaymentRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buyerId", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string buyerId
		{
			get
			{
				return this._buyerId;
			}
			set
			{
				if ((this._buyerId != value))
				{
					this.OnbuyerIdChanging(value);
					this.SendPropertyChanging();
					this._buyerId = value;
					this.SendPropertyChanged("buyerId");
					this.OnbuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(32)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(32)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NChar(30)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_PaymentRequest", Storage="_PaymentRequests", ThisKey="buyerId", OtherKey="buyerId")]
		public EntitySet<PaymentRequest> PaymentRequests
		{
			get
			{
				return this._PaymentRequests;
			}
			set
			{
				this._PaymentRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentRequests(PaymentRequest entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_PaymentRequests(PaymentRequest entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentRequest")]
	public partial class PaymentRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _paymentId;
		
		private string _transId;
		
		private string _amount;
		
		private string _buyerId;
		
		private string _responseTime;
		
		private string _signature;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<OderRequest> _OderRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpaymentIdChanging(int value);
    partial void OnpaymentIdChanged();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnbuyerIdChanging(string value);
    partial void OnbuyerIdChanged();
    partial void OnresponseTimeChanging(string value);
    partial void OnresponseTimeChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    #endregion
		
		public PaymentRequest()
		{
			this._Buyer = default(EntityRef<Buyer>);
			this._OderRequest = default(EntityRef<OderRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int paymentId
		{
			get
			{
				return this._paymentId;
			}
			set
			{
				if ((this._paymentId != value))
				{
					this.OnpaymentIdChanging(value);
					this.SendPropertyChanging();
					this._paymentId = value;
					this.SendPropertyChanged("paymentId");
					this.OnpaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30)")]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					if (this._OderRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NChar(30)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buyerId", DbType="NChar(10)")]
		public string buyerId
		{
			get
			{
				return this._buyerId;
			}
			set
			{
				if ((this._buyerId != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbuyerIdChanging(value);
					this.SendPropertyChanging();
					this._buyerId = value;
					this.SendPropertyChanged("buyerId");
					this.OnbuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseTime", DbType="NChar(30)")]
		public string responseTime
		{
			get
			{
				return this._responseTime;
			}
			set
			{
				if ((this._responseTime != value))
				{
					this.OnresponseTimeChanging(value);
					this.SendPropertyChanging();
					this._responseTime = value;
					this.SendPropertyChanged("responseTime");
					this.OnresponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(MAX)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_PaymentRequest", Storage="_Buyer", ThisKey="buyerId", OtherKey="buyerId", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.PaymentRequests.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.PaymentRequests.Add(this);
						this._buyerId = value.buyerId;
					}
					else
					{
						this._buyerId = default(string);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_PaymentRequest", Storage="_OderRequest", ThisKey="transId", OtherKey="transId", IsForeignKey=true)]
		public OderRequest OderRequest
		{
			get
			{
				return this._OderRequest.Entity;
			}
			set
			{
				OderRequest previousValue = this._OderRequest.Entity;
				if (((previousValue != value) 
							|| (this._OderRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OderRequest.Entity = null;
						previousValue.PaymentRequests.Remove(this);
					}
					this._OderRequest.Entity = value;
					if ((value != null))
					{
						value.PaymentRequests.Add(this);
						this._transId = value.transId;
					}
					else
					{
						this._transId = default(string);
					}
					this.SendPropertyChanged("OderRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfirmOderRequest")]
	public partial class ConfirmOderRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _corId;
		
		private string _transId;
		
		private string _statusCode;
		
		private string _payUrl;
		
		private string _signature;
		
		private EntityRef<OderRequest> _OderRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncorIdChanging(int value);
    partial void OncorIdChanged();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnstatusCodeChanging(string value);
    partial void OnstatusCodeChanged();
    partial void OnpayUrlChanging(string value);
    partial void OnpayUrlChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    #endregion
		
		public ConfirmOderRequest()
		{
			this._OderRequest = default(EntityRef<OderRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int corId
		{
			get
			{
				return this._corId;
			}
			set
			{
				if ((this._corId != value))
				{
					this.OncorIdChanging(value);
					this.SendPropertyChanging();
					this._corId = value;
					this.SendPropertyChanged("corId");
					this.OncorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30)")]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					if (this._OderRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusCode", DbType="NChar(10)")]
		public string statusCode
		{
			get
			{
				return this._statusCode;
			}
			set
			{
				if ((this._statusCode != value))
				{
					this.OnstatusCodeChanging(value);
					this.SendPropertyChanging();
					this._statusCode = value;
					this.SendPropertyChanged("statusCode");
					this.OnstatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payUrl", DbType="NVarChar(MAX)")]
		public string payUrl
		{
			get
			{
				return this._payUrl;
			}
			set
			{
				if ((this._payUrl != value))
				{
					this.OnpayUrlChanging(value);
					this.SendPropertyChanging();
					this._payUrl = value;
					this.SendPropertyChanged("payUrl");
					this.OnpayUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(MAX)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_ConfirmOderRequest", Storage="_OderRequest", ThisKey="transId", OtherKey="transId", IsForeignKey=true)]
		public OderRequest OderRequest
		{
			get
			{
				return this._OderRequest.Entity;
			}
			set
			{
				OderRequest previousValue = this._OderRequest.Entity;
				if (((previousValue != value) 
							|| (this._OderRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OderRequest.Entity = null;
						previousValue.ConfirmOderRequests.Remove(this);
					}
					this._OderRequest.Entity = value;
					if ((value != null))
					{
						value.ConfirmOderRequests.Add(this);
						this._transId = value.transId;
					}
					else
					{
						this._transId = default(string);
					}
					this.SendPropertyChanged("OderRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Merchant")]
	public partial class Merchant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _shopId;
		
		private string _MerchantName;
		
		private string _amount;
		
		private string _accessKey;
		
		private string _serectKey;
		
		private string _Address;
		
		private string _resultUrl;
		
		private string _notifyUrl;
		
		private EntitySet<OderRequest> _OderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshopIdChanging(string value);
    partial void OnshopIdChanged();
    partial void OnMerchantNameChanging(string value);
    partial void OnMerchantNameChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnaccessKeyChanging(string value);
    partial void OnaccessKeyChanged();
    partial void OnserectKeyChanging(string value);
    partial void OnserectKeyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnresultUrlChanging(string value);
    partial void OnresultUrlChanged();
    partial void OnnotifyUrlChanging(string value);
    partial void OnnotifyUrlChanged();
    #endregion
		
		public Merchant()
		{
			this._OderRequests = new EntitySet<OderRequest>(new Action<OderRequest>(this.attach_OderRequests), new Action<OderRequest>(this.detach_OderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantName", DbType="NVarChar(30)")]
		public string MerchantName
		{
			get
			{
				return this._MerchantName;
			}
			set
			{
				if ((this._MerchantName != value))
				{
					this.OnMerchantNameChanging(value);
					this.SendPropertyChanging();
					this._MerchantName = value;
					this.SendPropertyChanged("MerchantName");
					this.OnMerchantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NChar(30)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string accessKey
		{
			get
			{
				return this._accessKey;
			}
			set
			{
				if ((this._accessKey != value))
				{
					this.OnaccessKeyChanging(value);
					this.SendPropertyChanging();
					this._accessKey = value;
					this.SendPropertyChanged("accessKey");
					this.OnaccessKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serectKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string serectKey
		{
			get
			{
				return this._serectKey;
			}
			set
			{
				if ((this._serectKey != value))
				{
					this.OnserectKeyChanging(value);
					this.SendPropertyChanging();
					this._serectKey = value;
					this.SendPropertyChanged("serectKey");
					this.OnserectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultUrl", DbType="NVarChar(MAX)")]
		public string resultUrl
		{
			get
			{
				return this._resultUrl;
			}
			set
			{
				if ((this._resultUrl != value))
				{
					this.OnresultUrlChanging(value);
					this.SendPropertyChanging();
					this._resultUrl = value;
					this.SendPropertyChanged("resultUrl");
					this.OnresultUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notifyUrl", DbType="NVarChar(MAX)")]
		public string notifyUrl
		{
			get
			{
				return this._notifyUrl;
			}
			set
			{
				if ((this._notifyUrl != value))
				{
					this.OnnotifyUrlChanging(value);
					this.SendPropertyChanging();
					this._notifyUrl = value;
					this.SendPropertyChanged("notifyUrl");
					this.OnnotifyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_OderRequest", Storage="_OderRequests", ThisKey="shopId", OtherKey="shopId")]
		public EntitySet<OderRequest> OderRequests
		{
			get
			{
				return this._OderRequests;
			}
			set
			{
				this._OderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OderRequests(OderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = this;
		}
		
		private void detach_OderRequests(OderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OderRequest")]
	public partial class OderRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transId;
		
		private string _amount;
		
		private string _shopId;
		
		private string _oderInfo;
		
		private string _responseTime;
		
		private string _signature;
		
		private EntitySet<PaymentRequest> _PaymentRequests;
		
		private EntitySet<ConfirmOderRequest> _ConfirmOderRequests;
		
		private EntitySet<OrderPaymentReceipt> _OrderPaymentReceipts;
		
		private EntityRef<Merchant> _Merchant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnshopIdChanging(string value);
    partial void OnshopIdChanged();
    partial void OnoderInfoChanging(string value);
    partial void OnoderInfoChanged();
    partial void OnresponseTimeChanging(string value);
    partial void OnresponseTimeChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    #endregion
		
		public OderRequest()
		{
			this._PaymentRequests = new EntitySet<PaymentRequest>(new Action<PaymentRequest>(this.attach_PaymentRequests), new Action<PaymentRequest>(this.detach_PaymentRequests));
			this._ConfirmOderRequests = new EntitySet<ConfirmOderRequest>(new Action<ConfirmOderRequest>(this.attach_ConfirmOderRequests), new Action<ConfirmOderRequest>(this.detach_ConfirmOderRequests));
			this._OrderPaymentReceipts = new EntitySet<OrderPaymentReceipt>(new Action<OrderPaymentReceipt>(this.attach_OrderPaymentReceipts), new Action<OrderPaymentReceipt>(this.detach_OrderPaymentReceipts));
			this._Merchant = default(EntityRef<Merchant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NChar(30)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="NChar(10)")]
		public string shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					if (this._Merchant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oderInfo", DbType="NVarChar(50)")]
		public string oderInfo
		{
			get
			{
				return this._oderInfo;
			}
			set
			{
				if ((this._oderInfo != value))
				{
					this.OnoderInfoChanging(value);
					this.SendPropertyChanging();
					this._oderInfo = value;
					this.SendPropertyChanged("oderInfo");
					this.OnoderInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseTime", DbType="NChar(30)")]
		public string responseTime
		{
			get
			{
				return this._responseTime;
			}
			set
			{
				if ((this._responseTime != value))
				{
					this.OnresponseTimeChanging(value);
					this.SendPropertyChanging();
					this._responseTime = value;
					this.SendPropertyChanged("responseTime");
					this.OnresponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(MAX)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_PaymentRequest", Storage="_PaymentRequests", ThisKey="transId", OtherKey="transId")]
		public EntitySet<PaymentRequest> PaymentRequests
		{
			get
			{
				return this._PaymentRequests;
			}
			set
			{
				this._PaymentRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_ConfirmOderRequest", Storage="_ConfirmOderRequests", ThisKey="transId", OtherKey="transId")]
		public EntitySet<ConfirmOderRequest> ConfirmOderRequests
		{
			get
			{
				return this._ConfirmOderRequests;
			}
			set
			{
				this._ConfirmOderRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_OrderPaymentReceipt", Storage="_OrderPaymentReceipts", ThisKey="transId", OtherKey="transId")]
		public EntitySet<OrderPaymentReceipt> OrderPaymentReceipts
		{
			get
			{
				return this._OrderPaymentReceipts;
			}
			set
			{
				this._OrderPaymentReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_OderRequest", Storage="_Merchant", ThisKey="shopId", OtherKey="shopId", IsForeignKey=true)]
		public Merchant Merchant
		{
			get
			{
				return this._Merchant.Entity;
			}
			set
			{
				Merchant previousValue = this._Merchant.Entity;
				if (((previousValue != value) 
							|| (this._Merchant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Merchant.Entity = null;
						previousValue.OderRequests.Remove(this);
					}
					this._Merchant.Entity = value;
					if ((value != null))
					{
						value.OderRequests.Add(this);
						this._shopId = value.shopId;
					}
					else
					{
						this._shopId = default(string);
					}
					this.SendPropertyChanged("Merchant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentRequests(PaymentRequest entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = this;
		}
		
		private void detach_PaymentRequests(PaymentRequest entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = null;
		}
		
		private void attach_ConfirmOderRequests(ConfirmOderRequest entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = this;
		}
		
		private void detach_ConfirmOderRequests(ConfirmOderRequest entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = null;
		}
		
		private void attach_OrderPaymentReceipts(OrderPaymentReceipt entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = this;
		}
		
		private void detach_OrderPaymentReceipts(OrderPaymentReceipt entity)
		{
			this.SendPropertyChanging();
			entity.OderRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentReceipt")]
	public partial class OrderPaymentReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _oprId;
		
		private string _transId;
		
		private string _amount;
		
		private string _statusCode;
		
		private string _responseTime;
		
		private string _signature;
		
		private EntityRef<OderRequest> _OderRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoprIdChanging(int value);
    partial void OnoprIdChanged();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnstatusCodeChanging(string value);
    partial void OnstatusCodeChanged();
    partial void OnresponseTimeChanging(string value);
    partial void OnresponseTimeChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    #endregion
		
		public OrderPaymentReceipt()
		{
			this._OderRequest = default(EntityRef<OderRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oprId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int oprId
		{
			get
			{
				return this._oprId;
			}
			set
			{
				if ((this._oprId != value))
				{
					this.OnoprIdChanging(value);
					this.SendPropertyChanging();
					this._oprId = value;
					this.SendPropertyChanged("oprId");
					this.OnoprIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="NChar(30)")]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					if (this._OderRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NChar(30)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusCode", DbType="NChar(10)")]
		public string statusCode
		{
			get
			{
				return this._statusCode;
			}
			set
			{
				if ((this._statusCode != value))
				{
					this.OnstatusCodeChanging(value);
					this.SendPropertyChanging();
					this._statusCode = value;
					this.SendPropertyChanged("statusCode");
					this.OnstatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseTime", DbType="NChar(30)")]
		public string responseTime
		{
			get
			{
				return this._responseTime;
			}
			set
			{
				if ((this._responseTime != value))
				{
					this.OnresponseTimeChanging(value);
					this.SendPropertyChanging();
					this._responseTime = value;
					this.SendPropertyChanged("responseTime");
					this.OnresponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(MAX)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OderRequest_OrderPaymentReceipt", Storage="_OderRequest", ThisKey="transId", OtherKey="transId", IsForeignKey=true)]
		public OderRequest OderRequest
		{
			get
			{
				return this._OderRequest.Entity;
			}
			set
			{
				OderRequest previousValue = this._OderRequest.Entity;
				if (((previousValue != value) 
							|| (this._OderRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OderRequest.Entity = null;
						previousValue.OrderPaymentReceipts.Remove(this);
					}
					this._OderRequest.Entity = value;
					if ((value != null))
					{
						value.OrderPaymentReceipts.Add(this);
						this._transId = value.transId;
					}
					else
					{
						this._transId = default(string);
					}
					this.SendPropertyChanged("OderRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
